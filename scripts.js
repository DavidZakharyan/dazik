// Import the functions you need from the SDKs you need
import { initializeApp } from "firebase/app";
import { getDatabase, ref, set, push, onValue, remove } from "firebase/database";

// Your web app's Firebase configuration
const firebaseConfig = {
  apiKey: "AIzaSyAu5Bg9tziYzdU14HJXome7F2OBPXsJ8no",
  authDomain: "myadssite-24b63.firebaseapp.com",
  projectId: "myadssite-24b63",
  storageBucket: "myadssite-24b63.appspot.com",
  messagingSenderId: "23382315564",
  appId: "1:23382315564:web:70dd8a25fc95b7d0cf3789",
  measurementId: "G-PRK2QEJKPP"
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);
const database = getDatabase(app);

let currentCity = '';
let currentTheme = '';

let ads = {};

// –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –∏–∑ Firebase
function loadAds() {
    const adsRef = ref(database, 'ads');
    onValue(adsRef, (snapshot) => {
        const data = snapshot.val();
        ads = data || {};
        displayAds();
    });
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ Firebase
function saveAd() {
    const title = document.getElementById('ad-title').value;
    const description = document.getElementById('ad-description').value;
    const contact = document.getElementById('ad-contact').value;
    const price = document.getElementById('ad-price').value;

    if (title && description && contact && price) {
        const ad = {
            title: title,
            description: description,
            contact: contact,
            price: price
        };
        const key = `${currentCity}-${currentTheme}`;
        const adsRef = ref(database, `ads/${key}`);
        const newAdRef = push(adsRef);
        set(newAdRef, ad);
        alert('–û–±—ä—è–≤–ª–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!');
        document.getElementById('ad-form').reset();
        goBackToThemeOptions();
    } else {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è.');
    }
}

// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ —Ä–∞–∑–¥–µ–ª–µ "–°–º–æ—Ç—Ä–µ—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è"
function displayAds() {
    const adsContainer = document.getElementById('ads-container');
    adsContainer.innerHTML = '';
    const key = `${currentCity}-${currentTheme}`;
    const cityThemeAds = ads[key] || [];

    cityThemeAds.forEach((ad, index) => {
        const adElement = document.createElement('div');
        adElement.innerHTML = `
            <p>üìå–ù–∞–∑–≤–∞–Ω–∏–µ: ${ad.title}</p>
            <p>üëá–û–ø–∏—Å–∞–Ω–∏–µ: ${ad.description}</p>
            <p>üí∞–°—Ç–æ–∏–º–æ—Å—Ç—å: ${ad.price} —Ä—É–±.</p>
            <p>üë®‚Äçüíª–î–ª—è —Å–≤—è–∑–∏: ${ad.contact}</p>
            <button onclick="deleteAd('${key}', '${index}')">–£–¥–∞–ª–∏—Ç—å</button>
            <hr>
        `;
        adsContainer.appendChild(adElement);
    });
}

// –£–¥–∞–ª—è–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–æ –∏–Ω–¥–µ–∫—Å—É
function deleteAd(key, index) {
    const adsRef = ref(database, `ads/${key}`);
    const adRef = ref(database, `ads/${key}/${index}`);
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ?')) {
        remove(adRef);
        alert('–û–±—ä—è–≤–ª–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ!');
        loadAds();
    }
}

// –û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–µ–∫—É—â–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ç–µ–º—ã
function filterCity() {
    currentCity = document.getElementById('city-dropdown').value;
    console.log('–í—ã–±—Ä–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥:', currentCity); // –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    if (currentCity) {
        document.getElementById('theme-selection').style.display = 'block';
        document.getElementById('theme-options').style.display = 'none';
        document.getElementById('create-ad').style.display = 'none';
        document.getElementById('view-ads').style.display = 'none';
        alert('–í—ã –≤—ã–±—Ä–∞–ª–∏ –≥–æ—Ä–æ–¥: ' + currentCity);
    } else {
        document.getElementById('theme-selection').style.display = 'none';
    }
}

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–µ–∫—É—â—É—é —Ç–µ–º—É –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –æ–ø—Ü–∏–∏
function selectTheme(theme) {
    currentTheme = theme;
    if (theme === '–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å') {
        document.getElementById('theme-selection').style.display = 'none';
        document.getElementById('question').style.display = 'block';
    } else {
        document.getElementById('theme-selection').style.display = 'none';
        document.getElementById('theme-options').style.display = 'block';
    }
}

// –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
function showCreateAd() {
    document.getElementById('theme-options').style.display = 'none';
    document.getElementById('create-ad').style.display = 'block';
}

// –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä –æ–±—ä—è–≤–ª–µ–Ω–∏–π
function showAds() {
    document.getElementById('theme-options').style.display = 'none';
    document.getElementById('view-ads').style.display = 'block';
    displayAds();
}

// –í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É —Ç–µ–º
function goBackToThemes() {
    document.getElementById('question').style.display = 'none';
    document.getElementById('theme-options').style.display = 'none';
    document.getElementById('theme-selection').style.display = 'block';
}

// –í–æ–∑–≤—Ä–∞—Ç –∫ –æ–ø—Ü–∏—è–º —Ç–µ–º
function goBackToThemeOptions() {
    document.getElementById('create-ad').style.display = 'none';
    document.getElementById('view-ads').style.display = 'none';
    document.getElementById('theme-options').style.display = 'block';
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.onload = function() {
    loadAds(); // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏–∑ Firebase
    const cityDropdown = document.getElementById('city-dropdown');
    cityDropdown.addEventListener('change', filterCity);
}
